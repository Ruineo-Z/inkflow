{
  "permissions": {
    "allow": [
      "Bash(git restore:*)",
      "Bash(uv run:*)",
      "Bash(npm run dev:*)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(chmod:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(docker login:*)",
      "Bash(docker logout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(docker build:*)",
      "Bash(docker stop inkflow-frontend-container)",
      "Bash(docker rm inkflow-frontend-container)",
      "Bash(docker pull:*)",
      "Bash(gh workflow:*)",
      "Bash(gh run list:*)",
      "Bash(docker system prune:*)",
      "Bash(docker manifest:*)",
      "Bash(gh run view:*)",
      "Bash(ssh:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_fill_form",
      "mcp__playwright__browser_network_requests",
      "Bash(source:*)",
      "Bash(uvicorn:*)",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_close",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__playwright__browser_handle_dialog",
      "Bash(/bashes)",
      "Bash(npm run build:*)",
      "Bash(echo:*)",
      "Bash(export API_BASE_URL=\"http://inkflow_backend:8000/api/v1\")",
      "Bash(API_BASE_URL=\"http://inkflow_backend:8000/api/v1\")",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_press_key",
      "Bash(mkdir:*)",
      "mcp__promptx__discover",
      "mcp__promptx__action",
      "mcp__promptx__recall",
      "Bash(curl:*)",
      "mcp__promptx__remember",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(DATABASE_URL=\"postgresql://admin:admin123@localhost:5432/inkflow\" uv run alembic current)",
      "Bash(DATABASE_URL:*)",
      "Bash(uv add:*)",
      "Bash(git log:*)",
      "Bash(DATABASE_URL=\"postgresql://admin:admin123@localhost:5432/inkflow\" uv run alembic upgrade head)",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"\\d chapters\")",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"SELECT version_num FROM alembic_version;\")",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"UPDATE alembic_version SET version_num = ''316cc97feb71'';\")",
      "Bash(python:*)",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"SELECT id, title, status, LEFT(content, 50) as content_preview FROM chapters LIMIT 5;\")",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"\\dT+ chapterstatus\")",
      "Bash(DATABASE_URL=\"postgresql://admin:admin123@localhost:5432/inkflow\" uv run alembic history)",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"UPDATE alembic_version SET version_num = ''ce0b5e4d2b89'';\")",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"DROP TYPE IF EXISTS chapterstatus CASCADE;\")",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"\n-- 重新添加status列\nALTER TABLE chapters ADD COLUMN status VARCHAR(20) NOT NULL DEFAULT ''completed'';\n\n-- 创建枚举类型\nCREATE TYPE chapterstatus AS ENUM (''generating'', ''completed'', ''failed'');\n\n-- 修改列类型\nALTER TABLE chapters ALTER COLUMN status DROP DEFAULT;\nALTER TABLE chapters ALTER COLUMN status TYPE chapterstatus USING status::chapterstatus;\nALTER TABLE chapters ALTER COLUMN status SET DEFAULT ''completed''::chapterstatus;\n\")",
      "Bash(PGPASSWORD=admin123 psql -h localhost -U admin -d inkflow -c \"UPDATE alembic_version SET version_num = ''07f492baa56a'';\")"
    ],
    "deny": [],
    "ask": []
  }
}